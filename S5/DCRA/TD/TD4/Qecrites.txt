1.1
1)
[1-9] 1 à 9
[0-9]? facultativement 0 à 9
|100 ou 100
donc tous les nombres de 1 à 100

2)
^ [A-Z] commence par une lettre en minuscule
[a-z]* minuscules non-accentues
donc n'importe quelle chaine d'un seul tenant commencant par une Majuscule, et ne contenant ensuite que des minuscules

3)
chaines de caracteres avec des caracteres blancs au début ou a la fin

/!\ sed permet de remplacer le contenu d'un fichier

DIFFERENCE:
a) %AB[^C] attention, ^ dans les crochets indique "n'importe quoi sauf "
b) %AB puis retire %ABC

comportement différent sur la ligne ""%ABD %ABC". Prise par la 1ere mais pas la 2eme

1.2
1)
[0-1][4-9]|[012][0-3]

2)
\d{1,4}[A-Z]{2}Xd{2}
\d[A-2]{2}-{3}

conventions dispos sur l'ARSEP
pour les noms de domaines
 c'est l'AFNI
conventions mail sur RFC

3) [_-a-z\.0-9]+@[_-a-z\.0-9]+\.[a-z]{2-3}
Ici, ça valide si elle est conventionnelle mais pas si elle est attribuée.

1.3 arrive pas à lire le tableau.
"*" prends le 1er et dernier guillement
"*?"prends le 1er et 2eme guillement ( fait au plus court quand '?' est aprés un répétiteur)

les parenthèses permettent de garder en mémoire
<input .*? value='(.*?)' >

en javascript, le ?p<ent>.*? correspond à un pattern

1.4
detecte si un nombre est un nombre premier

le SQL teste si l'expression reguliere est valide. Retourne 1 si c'est le cas, 0 sinon.

Q3)
/!\ se renseigner sur selenium pour les tests
q corresponds à la recherche google
send_keys simule les touches clavier

Q5 -
2.1 oui,oui,non
mt_rand() -> MersenTester rand
